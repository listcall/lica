- content_for :page_js do
  script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD9knuWFHshMUw5f9Vv6eaFEaU2oX-MDXA" type="text/javascript"
  javascript:
    window.lclData   = {};
    lclData.eventId  = #{@event.id};
    lclData.eventRef = '#{@event.event_ref}';
    lclData.eTypes   = '#{raw(@ev_times)}';
    lclData.eSelect  = '#{raw(@select)}';
    lclData.parents  = #{raw @event_bot.potential_parent_events};
    lclData.children = #{raw @event_bot.potential_child_events};
  = javascript_pack_tag 'events/show'

- content_for :subhead do
  .subhead
    .container.text-primary
      .row
        .col-xs-6
          = render :partial => '/subhead_title',
            :locals => {title: [{label: "Events", ref: "/events"}, {label: "#{@event.title}"} ]}
        .col-xs-6.text-right
          a.help-button href="/events/new"
            i.glyphicon.glyphicon-plus
            |  Create Event
          a.help-button href="/events/new?copy=#{@event.id}"
            i.glyphicon.glyphicon-duplicate
            |  Copy Event
          = raw event_delete_link(@event.event)
          = member_help_button('events')

css:
  .select2wide { width: 350px;       }
  .pCount      { margin-left: 10px;  }
  .btn-group   { margin-top: 0; margin-bottom: 0; }

.container
  .row
    .col-md-6
      = render 'event_overview'

    .col-md-6
      table.table.table-condensed.table-bordered.table-hover
        thead
          th Period
          th
            i.fa.fa-bullhorn>
            ' Paging
          th.ar
            form action="/events/#{@event.event_ref}/periods" method="POST"
              input name="authenticity_token" type="hidden" value=form_authenticity_token 
                button#eventPeriodCreateBtn.btn.btn-xs.btn-primary 
                  i.glyphicon.glyphicon-plus
        tbody#periodBody
          - @event.periods.sorted.each do |period|
            tr id="period_#{period.id}"
              td
                i.fa.fa-arrows-v.sortIcon
                a href="/events/#{@event.event_ref}/periods/#{period.position}"
                  => "Period #{period.position}"
                .badge.pCount data-toggle='tooltip' title='#{tooltip_text(period)}' #{period.participants.count }
              td
                .btn-group.btn-group-xs role="group"
                  .btn-group.btn-group-xs role="rsvp"
                    button.btn.btn-default.dropdown-toggle.btnRSVP type="button" data-toggle="dropdown"
                      | RSVP
                      span.caret<
                    ul.dropdown-menu role="rsvp"
                        li = event_page_link(period, :Heads_Up)
                        li = event_page_link(period, :Immediate_Callout)
                        li = event_page_link(period, :Delayed_Callout)
                  = event_page_link(period, :Notify)
                  = event_page_link(period, :Leave)
                  = event_page_link(period, :Return)
              td.ar
                = delete_event_period_button(period)
    /FIXME:XXX do we need this functionality, can we follow-up later
      small
        div style=("margin-bottom: 8px;")
          b= participating_teams_title(@event.event)
          div style=("display: inline-block; float: right;")
            = event_add_parent_button(@event.event)
            = event_add_child_button(@event.event)
            = event_directory_button(@event.event)
        - if @event.event.parent
          div style=("margin-top: 4px; margin-bottom: 4px; border-bottom: 1px solid gray;")  Parent Team
          = parent_team(@event.event.parent)
          p
        - if @event.event.has_children?
          div style=("margin-top: 4px; border-bottom: 1px solid grey; padding-bottom: 1px; margin-bottom: 2px;")
            | Child #{"Team".pluralize(@event.event.children.count)}
            div style=("float: right;")
              a.inline.addChild href="#"  Add Child
          - @event.event.children.sort {|x,y| x.team.acronym <=> y.team.acronym}.each do |child_event|
            = child_team(child_event)
          = child_periods(@event.event)
  .row
    .container
      .row
        .col-xs-12
          .panel-group#accordion
            = render :partial => 'event_description'
            - unless @assignments.empty?
              = render :partial => 'paging_log'
            - if "Operation" == @event.event.typ_name
              = render :partial => 'callout_checklist'

  = render 'geopicker_modal'
