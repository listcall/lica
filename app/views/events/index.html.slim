- content_for :page_js do
  script src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"
  script src="https://cdn.datatables.net/fixedheader/3.1.2/js/dataTables.fixedHeader.min.js"

  javascript:
    $(document).ready(function() {
        $('table.display').DataTable( {
            "paging":   false,
            "info":     false,
            "order": [[ 4, "desc" ]],
            "fixedHeader": {
              "header": true,
              "footer": true,
              }
        } );
    } );

link href="https://cdn.datatables.net/v/dt/dt-1.10.15/datatables.min.css" rel="stylesheet" type="text/css"

css:
  #timeBlock {
    float: right;
    margin-top: 12px;
  }

- content_for :subhead do
  .subhead
    .container.text-primary
      .row
        .col-xs-6
          b
            = render :partial => 'team_title'
        .col-xs-6.text-right
          a.help-button href="/events/new"
            span.glyphicon.glyphicon-plus
            |  Create Event
          = member_help_button('events')

.container
  .row
    - if "all" == "#{@view}"
      - cache [current_team, "all_events"] do
        /FIXME: presorted to current date but may want to reverse for upcoming
        = render partial: 'event_table', locals: {events: @all_events, id: "allTbl"}
    - else
      - cache [current_team, "current_events"] do
        = render partial: 'event_table', locals: {events: @current_events,  title: "Happening Now", id: "nowTbl"}
        - if @current_events.count.zero?
          small There are no events happening right now
        p
        = render partial: 'event_table', locals: {events: @upcoming_events, id: "upcomingTbl",
          title: "Upcoming Events (#{sdate(Time.now - 1.day)} to #{sdate(Event.upcoming_finish)})" }
        p
        = render partial: 'event_table', locals: {events: @recent_events, id: "recentTbl",
          title: "Recent Events (#{sdate(Event.recent_start)} to #{sdate(Time.now + 1.day)})"}
        p
    small
      | There are <b>#{current_team.events.count}</b> #{current_team.acronym} events in the database
      - if current_team.events.count > 0
        |, from #{first_start} to #{last_finish}
      br
      = event_summary_stats
